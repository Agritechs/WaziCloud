{
  "stats": {
    "suites": 1,
    "tests": 4,
    "passes": 3,
    "pending": 0,
    "failures": 1,
    "start": "2019-02-04T17:58:50.384Z",
    "end": "2019-02-04T17:58:54.191Z",
    "duration": 3807,
    "testsRegistered": 4,
    "passPercent": 75,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "warning",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "uuid": "7db31723-4741-4ee3-bd17-048d9c4c61ce",
    "title": "",
    "fullFile": "",
    "file": "",
    "beforeHooks": [],
    "afterHooks": [],
    "tests": [],
    "suites": [
      {
        "uuid": "ffddd713-5c45-49d2-a05e-90b812b06552",
        "title": "Projects",
        "fullFile": "/home/mehdi/git/forks/Platform/tests/test/projects/projects.test.js",
        "file": "/test/projects/projects.test.js",
        "beforeHooks": [
          {
            "title": "\"before all\" hook",
            "fullTitle": "Projects \"before all\" hook",
            "timedOut": false,
            "duration": 1301,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "try {\n    withAdmin = await utils.getAdminAuth()\n    withNormal = await utils.getNormalAuth()\n} catch (err) {\n    console.log('error:' + err)\n}",
            "err": {},
            "isRoot": false,
            "uuid": "e511e2d6-f28f-4eec-8e01-61821c2d4385",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [
          {
            "title": "\"after each\" hook",
            "fullTitle": "Projects \"after each\" hook",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "try {\n} catch (err) {\n    console.log('error:' + err)\n    throw err\n}",
            "err": {},
            "isRoot": false,
            "uuid": "9fe13ed8-32e5-4d45-8414-c11be962e260",
            "isHook": true,
            "skipped": false
          }
        ],
        "tests": [
          {
            "title": "an admin gets list of projects",
            "fullTitle": "Projects an admin gets list of projects",
            "timedOut": false,
            "duration": 335,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "let res = await getProjects().set(withAdmin);\nres.should.have.status(200);\nres.body.should.be.a('array');\nres.body.should.deep.include(project);\nres.body[0].should.have.property('name');\nres.body[0].should.have.property('id');\nres.body[0].should.have.property('gateways');\nres.body[0].should.have.property('devices');",
            "err": {},
            "isRoot": false,
            "uuid": "c8d7ca26-6f21-4e0d-9c54-16d6f8ec1845",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "an admin gets a project with its id",
            "fullTitle": "Projects an admin gets a project with its id",
            "timedOut": false,
            "duration": 425,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "let res = await getProject(project.id).set(withAdmin);\nres.should.have.status(200);\nres.body.should.be.a('object');\nres.body.should.deep.include(project);\nres.body.should.have.property('name');\nres.body.should.have.property('id');\nres.body.should.have.property('gateways');\nres.body.should.have.property('devices');",
            "err": {},
            "isRoot": false,
            "uuid": "3f728009-0247-4003-9264-3d011096387b",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "a normal user can create a project, get, and delete project",
            "fullTitle": "Projects a normal user can create a project, get, and delete project",
            "timedOut": false,
            "duration": 987,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const newProject = {\n    \"name\": \"NewProject 4\",\n    \"gateways\": ['GW3', 'GW2'],\n    \"devices\": ['D1', 'D2']\n};\nlet res = await createProject(newProject).set(withNormal);\nres.should.have.status(200);\nres.body.should.be.a('object');\nlet res2 = await getProjects().set(withAdmin);\nres2.should.have.status(200);\nres2.body.should.be.a('array');\nlet entry = res2.body.find(p => p.name === newProject.name);\nentry.should.deep.include(newProject);\n\nconst delRes = await deleteProject(entry.id).set(withAdmin);\ndelRes.should.have.status(204);",
            "err": {},
            "isRoot": false,
            "uuid": "59ac016a-bd82-4422-84d9-354b7e3510e3",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "a normal user can create a project, get, update its devices, gateways, and delete project",
            "fullTitle": "Projects a normal user can create a project, get, update its devices, gateways, and delete project",
            "timedOut": false,
            "duration": 743,
            "state": "failed",
            "pass": false,
            "fail": true,
            "pending": false,
            "code": "const newProject = {\n    \"name\": \"NewProject 8\",\n    \"gateways\": ['GW3', 'GW2'],\n    \"devices\": ['D1', 'D2']\n};\nconst newProjectAfterUpdates = {\n    \"name\": \"NewProject 8\",\n    \"gateways\": ['G6', 'G7'],\n    \"devices\": ['D6', 'D7']\n};\nlet res = await createProject(newProject).set(withNormal);\nres.should.have.status(200);\nres.body.should.be.a('object');\nlet res2 = await getProjects().set(withAdmin);\nres2.should.have.status(200);\nres2.body.should.be.a('array');\nlet entry = res2.body.find(p => p.name === newProject.name);\nentry.should.deep.include(newProject);\nconst updateDevRes = await updateProjectDevices(entry.id, ['D6', 'D7']).set(withAdmin);\nupdateDevRes.should.have.status(204);\nconst updateGwRes = await updateProjectGateways(entry.id, ['G6', 'G7']).set(withAdmin);\nupdateGwRes.should.have.status(204);\nlet res3 = await getProject(entry.id).set(withAdmin);\nres3.should.have.status(200);\nentry2 = res3.body;\nentry2.should.deep.include(newProjectAfterUpdates);\nconst delRes = await deleteProject(entry.id).set(withAdmin);\n//console.log(entry, entry2)\ndelRes.should.have.status(204);",
            "err": {
              "message": "AssertionError: expected { Object (name, id, ...) } to have deep property 'gateways' of [ 'GW3', 'GW2' ], but got [ 'G6', 'G7' ]",
              "estack": "AssertionError: expected { Object (name, id, ...) } to have deep property 'gateways' of [ 'GW3', 'GW2' ], but got [ 'G6', 'G7' ]\n    at Proxy.assertProperty (node_modules/chai/lib/chai/core/assertions.js:1873:12)\n    at Proxy.methodWrapper (node_modules/chai/lib/chai/utils/addMethod.js:57:25)\n    at Proxy.<anonymous> (node_modules/chai/lib/chai/core/assertions.js:553:27)\n    at Array.forEach (<anonymous>)\n    at Proxy.include (node_modules/chai/lib/chai/core/assertions.js:547:15)\n    at Proxy.chainableMethodWrapper (node_modules/chai/lib/chai/utils/addChainableMethod.js:113:49)\n    at Context.it (test/projects/projects.test.js:108:27)\n    at processTicksAndRejections (internal/process/next_tick.js:81:5)",
              "diff": " [\n-   \"G6\"\n-   \"G7\"\n+   \"GW3\"\n+   \"GW2\"\n ]\n"
            },
            "isRoot": false,
            "uuid": "4a1f2350-03b8-4ac0-9c72-c9d077c2bbe0",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "c8d7ca26-6f21-4e0d-9c54-16d6f8ec1845",
          "3f728009-0247-4003-9264-3d011096387b",
          "59ac016a-bd82-4422-84d9-354b7e3510e3"
        ],
        "failures": [
          "4a1f2350-03b8-4ac0-9c72-c9d077c2bbe0"
        ],
        "pending": [],
        "skipped": [],
        "duration": 2490,
        "root": false,
        "rootEmpty": false,
        "_timeout": 20000
      }
    ],
    "passes": [],
    "failures": [],
    "pending": [],
    "skipped": [],
    "duration": 0,
    "root": true,
    "rootEmpty": true,
    "_timeout": 20000
  },
  "copyrightYear": 2019
}