swagger: '2.0'
info:
  version: '1.0'
  title: 'WAZIUP API'
host: waziup.io

# Data structure definitions:
definitions:
  $ref: 'definitions.yaml'
paths:
# Apps API
  /apps:
    get:
      tags: [apps]
      responses:
        200:
          schema:
            items:
              $ref: ! '#/definitions/App'
            type: array
          description: 'get list of all apps'
      produces:
      - application/json
    post:
      tags: [apps]
      consumes:
      - application/json
      responses:
        400:
          description: Invalid `body`
        204:
          description: 'Create an app'
      produces:
      - application/json
      parameters:
      - required: true
        schema:
          $ref: ! '#/definitions/App'
        in: body
        name: body
  /apps/{id}:
    get:
      tags: [apps]
      responses:
        404:
          description: ! '`id` not found'
        200:
          schema:
            $ref: ! '#/definitions/App'
          description: 'Get details of one application'
      produces:
      - application/json
      parameters:
      - maximum: 9223372036854775807
        minimum: -9223372036854775808
        required: true
        in: path
        name: id
        type: integer
    post:
      tags: [apps]
      consumes:
      - application/json
      responses:
        400:
          description: Invalid `body`
        204:
          description: 'Update details of app'
      produces:
      - application/json
      parameters:
      - required: true
        schema:
          $ref: ! '#/definitions/App'
        in: body
        name: body
      - maximum: 9223372036854775807
        minimum: -9223372036854775808
        required: true
        in: path
        name: id
        type: integer
    put:
      tags: [apps]
      consumes:
      - application/json
      responses:
        400:
          description: Invalid `body`
        204:
          description: 'Actions on apps (deploy, scale...)'
      produces:
      - application/json
      parameters:
      - required: true
        schema:
          $ref: ! '#/definitions/AppAction'
        in: body
        name: body
      - maximum: 9223372036854775807
        minimum: -9223372036854775808
        required: true
        in: path
        name: id
        type: integer
    delete:
      tags: [apps]
      responses:
        404:
          description: ! '`id` not found'
        204:
          description: 'remove one application'
      produces:
      - application/json
      parameters:
      - maximum: 9223372036854775807
        minimum: -9223372036854775808
        required: true
        in: path
        name: id
        type: integer
  /apps/{id}/containers:
    get:
      tags: [apps]
      responses:
        404:
          description: ! '`id` not found'
        200:
          schema:
            $ref: ! '#/definitions/Container'
            type: array
          description: 'Get containers of app'
      produces:
      - application/json
      parameters:
      - maximum: 9223372036854775807
        minimum: -9223372036854775808
        required: true
        in: path
        name: id
        type: integer

# Data API
## Entities
  /data/observations:
    get:
      tags: [data]
      responses:
        200:
          schema:
            items:
              $ref: ! '#/definitions/Observations'
            type: array
          description: 'get list of all observations'
      produces:
      - application/json
  /data/observations/{id}:
    get:
      tags: [data]
      responses:
        404:
          description: ! '`id` not found'
        200:
          schema:
            $ref: ! '#/definitions/Observations'
          description: 'Get details of an entity'
      produces:
      - application/json
      parameters:
      - maximum: 9223372036854775807
        minimum: -9223372036854775808
        required: true
        in: path
        name: id
        type: integer
  /data/subscriptions:
    get:
      tags: [data]
      responses:
        200:
          schema:
            items:
              $ref: ! '#/definitions/Subscription'
            type: array
          description: 'get list of all subscriptions'
      produces:
      - application/json
  /data/subscriptions/{id}:
    get:
      tags: [data]
      responses:
        404:
          description: ! '`id` not found'
        200:
          schema:
            $ref: ! '#/definitions/Subscription'
          description: 'Get details of a subscription'
      produces:
      - application/json
      parameters:
      - maximum: 9223372036854775807
        minimum: -9223372036854775808
        required: true
        in: path
        name: id
        type: integer




#Gateways API
  /gateways:
    get:
      tags: [gateways]
      responses:
        200:
          schema:
            items:
              $ref: ! '#/definitions/Gateway'
            type: array
          description: 'get list of all gateways'
      produces:
      - application/json
    post:
      tags: [gateways]
      consumes:
      - application/json
      responses:
        400:
          description: Invalid `body`
        201:
          schema:
            $ref: ! '#/definitions/Gateway'
          description: 'Create a gateway'
      produces:
      - application/json
      parameters:
      - required: true
        schema:
          $ref: ! '#/definitions/Gateway'
        in: body
        name: body
  /gateways/{id}:
    get:
      tags: [gateways]
      responses:
        404:
          description: ! '`id` not found'
        200:
          schema:
            $ref: ! '#/definitions/Gateway'
          description: 'Get details of a gateway'
      produces:
      - application/json
      parameters:
      - maximum: 9223372036854775807
        minimum: -9223372036854775808
        required: true
        in: path
        name: id
        type: integer
    put:
      tags: [gateways]
      consumes:
      - application/json
      responses:
        400:
          description: Invalid `body`
        204:
          description: 'Actions on gateways'
      produces:
      - application/json
      parameters:
      - required: true
        schema:
          $ref: ! '#/definitions/GatewayAction'
        in: body
        name: body
      - maximum: 9223372036854775807
        minimum: -9223372036854775808
        required: true
        in: path
        name: id
        type: integer
    delete:
      tags: [gateways]
      responses:
        404:
          description: ! '`id` not found'
        204:
          description: 'remove one gateway'
      produces:
      - application/json
      parameters:
      - maximum: 9223372036854775807
        minimum: -9223372036854775808
        required: true
        in: path
        name: id
        type: integer
  /gateways/{id}/devices:
    get:
      tags: [gateways]
      responses:
        404:
          description: ! '`id` not found'
        200:
          schema:
            $ref: ! '#/definitions/Device'
            type: array
          description: 'Get devices of a gateway'
      produces:
      - application/json
      parameters:
      - maximum: 9223372036854775807
        minimum: -9223372036854775808
        required: true
        in: path
        name: id
        type: integer
