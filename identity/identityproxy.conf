# This is an example how to configure httpd. 
# It assumes KeyCloak on http://mike.d3s.hide.ms.mff.cuni.cz:8080:--> aam.waziup.io
# and web to protect at http://mike.d3s.hide.ms.mff.cuni.cz:9080:--> http://platform.waziup.io
#
# Required settings at KeyCloak
# - create realm "Waziup"
# - create client "proxy"
# - under client "proxy" -> Settings
#   - set Authorization Enabled
#   - set Valid Redirect URIs to http://mike.d3s.hide.ms.mff.cuni.cz:9080/* --> http://platform.waziup.io/*
# - under client "proxy" -> Mappers
#   - click "Create" and set
#     - Name: Roles
#     - Mapper Type: User Realm Role
#     - Token Claim Name: roles
#     - Claim JSON Type: String
#     - Set Add to ID token, set Add to access token
# - under "Roles"
#   - click Add Role and name it k8s
# - under "Users"
#   - create a user, set a password, assign the roles 
# - Logout URL is mike.d3s.hide.ms.mff.cuni.cz:9080/redirect_uri?logout=http%3A%2F%2Fmike.d3s.hide.ms.mff.cuni.cz%3A9080
# K8S UI: user: k8sadmin, pass: admin13k8s

#proxy-k8s-ui http://platform.waziup.io
#kube UI http://217.77.95.123:30081/
#LoadModule proxy_module /usr/local/apache2/modules/mod_proxy.so
#LoadModule proxy_http_module /usr/local/apache2/modules/mod_proxy_http.so
#ServerName 217.77.95.123
#ServerName 127.0.0.1
#LoadModule  proxy_html_module modules/mod_proxy_html.so <VirtualHost *:80>

ServerName platformapi.waziup.io

<VirtualHost *:80>
ServerName orion.waziup.io
OIDCClientID orion-cli
OIDCProviderMetadataURL http://aam.waziup.io/auth/realms/waziup/.well-known/openid-configuration
OIDCRedirectURI http://orion.waziup.io/redirect_uri
OIDCClientSecret 060be8ce-1a65-49ce-8939-48d2dc29ea4c
OIDCCryptoPassphrase aa873hr87y23w

LogLevel debug
#<Location />
#   AuthType openid-connect
 #  OIDCReturnBearerToken true
#   Header set Authorization "Bearer %{HTTP_OIDC_ACCESS_TOKEN}e" env=HTTP_OIDC_ACCESS_TOKEN
#   Header set Authorization "Bearer %{OIDC_ACCESS_TOKEN}e" env=OIDC_ACCESS_TOKEN
#   Require valid-user
   #RequestHeader set Authorization "Bearer %{HTTP_OIDC_ACCESS_TOKEN}e" env=HTTP_OIDC_ACCESS_TOKEN
#   LogLevel debug
#</Location>

<Location /v1/data>
#   AuthType openid-connect
#   Require valid-user
   #Header set Authorization "Bearer %{HTTP_OIDC_ACCESS_TOKEN}e" env=HTTP_OIDC_ACCESS_TOKEN
#   RequestHeader set Authorization "Bearer %{HTTP_OIDC_ACCESS_TOKEN}e" env=HTTP_OIDC_ACCESS_TOKEN
#   ProxyPass "http://10.96.53.6:1026/v2/"
#   ProxyPassReverse "http://10.96.53.6:1026/v2/"
   ProxyPass "http://orion.waziup:1026/v2"
   ProxyPassReverse "http://orion.waziup:1026/v2"
   RewriteEngine On 
   
   Header always set Access-Control-Allow-Origin "*"
   Header always set Access-Control-Allow-Methods "POST, GET, OPTIONS"
   Header always set Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization, Fiware-ServicePath, Fiware-Service"
#   Header always set Access-Control-Allow-Headers "*"

#10.32.0.12 other ip
#
#   ProxyPass "http://broker.waziup.io/v2"
#   ProxyPassReverse  "http://broker.waziup.io/v2"
   LogLevel debug
   RewriteCond %{REQUEST_METHOD} OPTIONS 
   RewriteRule ^(.*)$ $1 [R=200,L]
</Location>

</VirtualHost>

<VirtualHost *:80>
ServerName cloudplatform.waziup.io
#mike.d3s.hide.ms.mff.cuni.cz:9080
OIDCProviderMetadataURL http://aam.waziup.io/auth/realms/waziup/.well-known/openid-configuration
#http://mike.d3s.hide.ms.mff.cuni.cz:8080/auth/realms/waziup/.well-known/openid-configuration
OIDCClientID k8s-ui-cli
OIDCRedirectURI http://cloudplatform.waziup.io/redirect_uri
OIDCClientSecret 4cfb8596-1a9e-47f1-a37b-c8541052ae20

# This is URL to which mod_auth_openidc connects to get response from KeyCloak. The URL can be arbitrary, only it has to be within the space protected by AuthType openid-connect

# This is a secret random used by mod_auth_openidc to protect communication. It can be arbitrary. Only it should not be leaked out.
#ProxyRequests on
OIDCCryptoPassphrase hd873hr87y23w
#    ProxyPreserveHost On
#    ProxyPass        "/" "http://192.168.111.2/"
#    ProxyPassReverse "/" "http://192.168.111.2/"
#    ServerName hostname.example.com
<Location />
   AuthType openid-connect
   Require valid-user
   #Require claim "roles~[\[,]k8s[ ,\]]"
   LogLevel debug
   ProxyPass "http://10.103.21.61/"
   ProxyPassReverse  "http://10.103.21.61/"
</Location>

</VirtualHost>

<VirtualHost *:80>
ServerName app.waziup.io
OIDCProviderMetadataURL http://aam.waziup.io/auth/realms/waziup/.well-known/openid-configuration
OIDCClientID web-waziup-cli
OIDCRedirectURI http://app.waziup.io/redirect_uri
OIDCClientSecret 667c0bbd-f21f-447e-a99f-a6fa8d13c35c

OIDCCryptoPassphrase hd873hr87y23w
<Location />
   AuthType openid-connect
   Require valid-user
   #Require claim "roles~[\[,]k8s[ ,\]]"
   LogLevel debug
   ProxyPass "http://www.waziup.io/"
   ProxyPassReverse "http://www.waziup.io/"
</Location>

<Location /dashboard>
   AuthType openid-connect
   Require valid-user
   #Require claim "roles~[\[,]k8s[ ,\]]"
   LogLevel debug
   ProxyPass "http://www.waziup.io/documentation/installation/hello-world/"
   ProxyPassReverse "http://www.waziup.io/"
</Location>

</VirtualHost>

<VirtualHost *:80>
ServerName dashboard.waziup.io
OIDCProviderMetadataURL http://aam.waziup.io/auth/realms/waziup/.well-known/openid-configuration
OIDCClientID mobile-app-cli
OIDCRedirectURI http://dashboard.waziup.io/redirect_uri
OIDCClientSecret 28226338-eb58-45f5-bdae-921091a8b35c

OIDCCryptoPassphrase hd873hr87y23w
<Location />
   AuthType openid-connect
   Require valid-user
   #Require claim "roles~[\[,]k8s[ ,\]]"
   LogLevel debug
   ProxyPass "http://dashboard.waziup:3000/"
   ProxyPassReverse "http://dashboard.waziup:3000/"
</Location>

</VirtualHost>
