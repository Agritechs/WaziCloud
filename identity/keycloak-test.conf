# This is an example how to configure httpd. 
# It assumes KeyCloak on http://mike.d3s.hide.ms.mff.cuni.cz:8080:--> aam.waziup.io
# and web to protect at http://mike.d3s.hide.ms.mff.cuni.cz:9080:--> http://platform.waziup.io
#
# Required settings at KeyCloak
# - create realm "Waziup"
# - create client "proxy"
# - under client "proxy" -> Settings
#   - set Authorization Enabled
#   - set Valid Redirect URIs to http://mike.d3s.hide.ms.mff.cuni.cz:9080/* --> http://platform.waziup.io/*
# - under client "proxy" -> Mappers
#   - click "Create" and set
#     - Name: Roles
#     - Mapper Type: User Realm Role
#     - Token Claim Name: roles
#     - Claim JSON Type: String
#     - Set Add to ID token, set Add to access token
# - under "Roles"
#   - click Add Role and name it k8s
# - under "Users"
#   - create a user, set a password, assign the roles 
# - Logout URL is mike.d3s.hide.ms.mff.cuni.cz:9080/redirect_uri?logout=http%3A%2F%2Fmike.d3s.hide.ms.mff.cuni.cz%3A9080
# K8S UI: user: k8sadmin, pass: admin13k8s

#proxy-k8s-ui http://platform.waziup.io
#kube UI http://217.77.95.123:30081/
#LoadModule proxy_module /usr/local/apache2/modules/mod_proxy.so
#LoadModule proxy_http_module /usr/local/apache2/modules/mod_proxy_http.so
#ServerName 217.77.95.123
#ServerName 127.0.0.1
ServerName platform.waziup.io
#mike.d3s.hide.ms.mff.cuni.cz:9080
OIDCClientID proxy-k8s-ui
OIDCProviderMetadataURL http://aam.waziup.io/auth/realms/waziup/.well-known/openid-configuration
#http://mike.d3s.hide.ms.mff.cuni.cz:8080/auth/realms/waziup/.well-known/openid-configuration
OIDCRedirectURI http://platform.waziup.io/redirect_uri

# This is the client secret to be found in KeyCloak Clients -> proxy -> Credentials
OIDCClientSecret 6011ee31-b6a8-4f3b-b442-9f8e075000e1

# This is URL to which mod_auth_openidc connects to get response from KeyCloak. The URL can be arbitrary, only it has to be within the space protected by AuthType openid-connect

# This is a secret random used by mod_auth_openidc to protect communication. It can be arbitrary. Only it should not be leaked out.
OIDCCryptoPassphrase hd873hr87y23w

<Location />
   AuthType openid-connect
   #Require valid-user
   #RequestHeader set Authorization "Bearer %{HTTP_OIDC_ACCESS_TOKEN}e" env=HTTP_OIDC_ACCESS_TOKEN
   Require claim "roles~[\[,]k8s[ ,\]]"
   LogLevel debug
   ProxyPass "http://217.77.95.123:30081/"
   ProxyPassReverse "http://217.77.95.123:30081/"
</Location>

<Location /v1/data>
   AuthType openid-connect
   #Require valid-user
   #RequestHeader set Authorization "Bearer %{HTTP_OIDC_ACCESS_TOKEN}e" env=HTTP_OIDC_ACCESS_TOKEN
   Require claim "roles~[\[,]data[ ,\]]"
   LogLevel debug
   ProxyPass "http://broker.waziup.io/v2"
   ProxyPassReverse  "http://broker.waziup.io/v2"
</Location>

<Location /v1/app>
   AuthType openid-connect
   #Require valid-user
   #RequestHeader set Authorization "Bearer %{HTTP_OIDC_ACCESS_TOKEN}e" env=HTTP_OIDC_ACCESS_TOKEN
   Require claim "roles~[\[,]app[ ,\]]"
   LogLevel debug
   ProxyPass "http://deis.waziup.io/v2"
   ProxyPassReverse "http://deis.waziup.io/v2"
</Location>
